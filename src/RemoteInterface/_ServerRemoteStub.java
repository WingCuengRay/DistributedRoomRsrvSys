package RemoteInterface;


/**
* RemoteInterface/_ServerRemoteStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ./ServerRemote.idl
* Wednesday, November 15, 2017 9:13:14 PM EST
*/

public class _ServerRemoteStub extends org.omg.CORBA.portable.ObjectImpl implements RemoteInterface.ServerRemote
{

  public String[] AddRecord (String date, short room, String[] timeslots)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("AddRecord", true);
                $out.write_string (date);
                $out.write_ushort (room);
                RemoteInterface.ListOfStringHelper.write ($out, timeslots);
                $in = _invoke ($out);
                String $result[] = RemoteInterface.ListOfStringHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return AddRecord (date, room, timeslots        );
            } finally {
                _releaseReply ($in);
            }
  } // AddRecord

  public boolean[] DeleteRecord (String date, short room, String[] timeslots)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("DeleteRecord", true);
                $out.write_string (date);
                $out.write_ushort (room);
                RemoteInterface.ListOfStringHelper.write ($out, timeslots);
                $in = _invoke ($out);
                boolean $result[] = RemoteInterface.ListOfBoolHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return DeleteRecord (date, room, timeslots        );
            } finally {
                _releaseReply ($in);
            }
  } // DeleteRecord

  public String Book (String stu_id, String campus, String date, short room, String timeslots)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Book", true);
                $out.write_string (stu_id);
                $out.write_string (campus);
                $out.write_string (date);
                $out.write_ushort (room);
                $out.write_string (timeslots);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Book (stu_id, campus, date, room, timeslots        );
            } finally {
                _releaseReply ($in);
            }
  } // Book

  public boolean CancelBook (String booking_id, String stu_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("CancelBook", true);
                $out.write_string (booking_id);
                $out.write_string (stu_id);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return CancelBook (booking_id, stu_id        );
            } finally {
                _releaseReply ($in);
            }
  } // CancelBook

  public String GetAvailTimeSlots (String date)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetAvailTimeSlots", true);
                $out.write_string (date);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetAvailTimeSlots (date        );
            } finally {
                _releaseReply ($in);
            }
  } // GetAvailTimeSlots

  public String ChangeReservation (String stu_id, String booking_id, String new_campus_name, String new_room_no, String new_timeslot)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ChangeReservation", true);
                $out.write_string (stu_id);
                $out.write_string (booking_id);
                $out.write_string (new_campus_name);
                $out.write_string (new_room_no);
                $out.write_string (new_timeslot);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ChangeReservation (stu_id, booking_id, new_campus_name, new_room_no, new_timeslot        );
            } finally {
                _releaseReply ($in);
            }
  } // ChangeReservation

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RemoteInterface/ServerRemote:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ServerRemoteStub
